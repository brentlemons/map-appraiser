#!/usr/bin/env python3
"""Compare column schemas between BPP and RES_COM CSV files"""

# BPP columns
bpp_header = """APPRAISAL_YR,ACCOUNT_NUM,MAILING_NUMBER,TOT_VAL,LAND_VAL,COUNTY_HS_AMT,COLLEGE_HS_AMT,HOSPITAL_HS_AMT,CITY_HS_AMT,ISD_HS_AMT,SPECIAL_HS_AMT,COUNTY_DISABLED_AMT,COLLEGE_DISABLED_AMT,HOSPITAL_DISABLED_AMT,CITY_DISABLED_AMT,ISD_DISABLED_AMT,SPECIAL_DISABLED_AMT,COUNTY_DISABLED_VET_AMT,COLLEGE_DISABLED_VET_AMT,HOSPITAL_DISABLED_VET_AMT,CITY_DISABLED_VET_AMT,ISD_DISABLED_VET_AMT,SPECIAL_DISABLED_VET_AMT,COUNTY_AG_AMT,COLLEGE_AG_AMT,HOSPITAL_AG_AMT,CITY_AG_AMT,ISD_AG_AMT,SPECIAL_AG_AMT,COUNTY_FREEPORT_AMT,COLLEGE_FREEPORT_AMT,HOSPITAL_FREEPORT_AMT,CITY_FREEPORT_AMT,ISD_FREEPORT_AMT,SPECIAL_FREEPORT_AMT,COUNTY_PC_AMT,COLLEGE_PC_AMT,HOSPITAL_PC_AMT,CITY_PC_AMT,ISD_PC_AMT,SPECIAL_PC_AMT,COUNTY_LOW_INCOME_AMT,COLLEGE_LOW_INCOME_AMT,HOSPITAL_LOW_INCOME_AMT,CITY_LOW_INCOME_AMT,ISD_LOW_INCOME_AMT,SPECIAL_LOW_INCOME_AMT,COUNTY_GIT_AMT,COLLEGE_GIT_AMT,HOSPITAL_GIT_AMT,CITY_GIT_AMT,ISD_GIT_AMT,SPECIAL_GIT_AMT,COUNTY_TOTAL_AMT,COLLEGE_TOTAL_AMT,HOSPITAL_TOTAL_AMT,CITY_TOTAL_AMT,ISD_TOTAL_AMT,SPECIAL_TOTAL_AMT,COUNTY_VET100_AMT,COLLEGE_VET100_AMT,HOSPITAL_VET100_AMT,CITY_VET100_AMT,ISD_VET100_AMT,SPECIAL_VET100_AMT,HEARINGS_START_DATE,PROTEST_DEADLINE_DATE,HEARINGS_CONCLUDE_DATE,CAP_VALUE,CONTRIBUTORY_AMT,BPP_PENALTY_IND,SPECIAL_INV_PENALTY_IND,HOMESTEAD_IND,COUNTY_ABATEMENT_AMT,COLLEGE_ABATEMENT_AMT,HOSPITAL_ABATEMENT_AMT,CITY_ABATEMENT_AMT,ISD_ABATEMENT_AMT,SPECIAL_ABATEMENT_AMT,COUNTY_HISTORIC_AMT,COLLEGE_HISTORIC_AMT,HOSPITAL_HISTORIC_AMT,CITY_HISTORIC_AMT,ISD_HISTORIC_AMT,SPECIAL_HISTORIC_AMT,APPRAISED_VAL,COUNTY_VET_HOME_AMT,COLLEGE_VET_HOME_AMT,HOSPITAL_VET_HOME_AMT,CITY_VET_HOME_AMT,ISD_VET_HOME_AMT,SPECIAL_VET_HOME_AMT,COUNTY_CHILD_CARE_AMT,CITY_CHILD_CARE_AMT"""

# RES_COM columns
res_com_header = """APPRAISAL_YR,ACCOUNT_NUM,MAILING_NUMBER,TOT_VAL,LAND_VAL,COUNTY_HS_AMT,COLLEGE_HS_AMT,HOSPITAL_HS_AMT,CITY_HS_AMT,ISD_HS_AMT,SPECIAL_HS_AMT,COUNTY_DISABLED_AMT,COLLEGE_DISABLED_AMT,HOSPITAL_DISABLED_AMT,CITY_DISABLED_AMT,ISD_DISABLED_AMT,SPECIAL_DISABLED_AMT,COUNTY_DISABLED_VET_AMT,COLLEGE_DISABLED_VET_AMT,HOSPITAL_DISABLED_VET_AMT,CITY_DISABLED_VET_AMT,ISD_DISABLED_VET_AMT,SPECIAL_DISABLED_VET_AMT,COUNTY_AG_AMT,COLLEGE_AG_AMT,HOSPITAL_AG_AMT,CITY_AG_AMT,ISD_AG_AMT,SPECIAL_AG_AMT,COUNTY_FREEPORT_AMT,COLLEGE_FREEPORT_AMT,HOSPITAL_FREEPORT_AMT,CITY_FREEPORT_AMT,ISD_FREEPORT_AMT,SPECIAL_FREEPORT_AMT,COUNTY_PC_AMT,COLLEGE_PC_AMT,HOSPITAL_PC_AMT,CITY_PC_AMT,ISD_PC_AMT,SPECIAL_PC_AMT,COUNTY_LOW_INCOME_AMT,COLLEGE_LOW_INCOME_AMT,HOSPITAL_LOW_INCOME_AMT,CITY_LOW_INCOME_AMT,ISD_LOW_INCOME_AMT,SPECIAL_LOW_INCOME_AMT,COUNTY_GIT_AMT,COLLEGE_GIT_AMT,HOSPITAL_GIT_AMT,CITY_GIT_AMT,ISD_GIT_AMT,SPECIAL_GIT_AMT,COUNTY_TOTAL_AMT,COLLEGE_TOTAL_AMT,HOSPITAL_TOTAL_AMT,CITY_TOTAL_AMT,ISD_TOTAL_AMT,SPECIAL_TOTAL_AMT,COUNTY_VET100_AMT,COLLEGE_VET100_AMT,HOSPITAL_VET100_AMT,CITY_VET100_AMT,ISD_VET100_AMT,SPECIAL_VET100_AMT,HEARINGS_START_DATE,PROTEST_DEADLINE_DATE,HEARINGS_CONCLUDE_DATE,CAP_VALUE,CONTRIBUTORY_AMT,BPP_PENALTY_IND,SPECIAL_INV_PENALTY_IND,HOMESTEAD_IND,COUNTY_ABATEMENT_AMT,COLLEGE_ABATEMENT_AMT,HOSPITAL_ABATEMENT_AMT,CITY_ABATEMENT_AMT,ISD_ABATEMENT_AMT,SPECIAL_ABATEMENT_AMT,COUNTY_HISTORIC_AMT,COLLEGE_HISTORIC_AMT,HOSPITAL_HISTORIC_AMT,CITY_HISTORIC_AMT,ISD_HISTORIC_AMT,SPECIAL_HISTORIC_AMT,APPRAISED_VAL,COUNTY_VET_HOME_AMT,COLLEGE_VET_HOME_AMT,HOSPITAL_VET_HOME_AMT,CITY_VET_HOME_AMT,ISD_VET_HOME_AMT,SPECIAL_VET_HOME_AMT,COUNTY_CHILD_CARE_AMT,CITY_CHILD_CARE_AMT"""

# Parse columns
bpp_columns = bpp_header.strip().split(',')
res_com_columns = res_com_header.strip().split(',')

# Convert to sets for comparison
bpp_set = set(bpp_columns)
res_com_set = set(res_com_columns)

# Analysis
print("=== SCHEMA COMPARISON ANALYSIS ===\n")

print(f"BPP_APPRAISAL_NOTICE_DATA.csv: {len(bpp_columns)} columns")
print(f"RES_COM_APPRAISAL_NOTICE_DATA.csv: {len(res_com_columns)} columns")
print()

# Check if schemas are identical
if bpp_columns == res_com_columns:
    print("✓ SCHEMAS ARE IDENTICAL - Same columns in the same order")
else:
    print("✗ SCHEMAS DIFFER")
    
    # Check if column names are the same (regardless of order)
    if bpp_set == res_com_set:
        print("  - Column names are the same but in different order")
    else:
        print("  - Column names differ")
        
        # Find differences
        only_in_bpp = bpp_set - res_com_set
        only_in_res_com = res_com_set - bpp_set
        
        if only_in_bpp:
            print("\n  Columns only in BPP:")
            for col in sorted(only_in_bpp):
                print(f"    - {col}")
                
        if only_in_res_com:
            print("\n  Columns only in RES_COM:")
            for col in sorted(only_in_res_com):
                print(f"    - {col}")

print("\n=== COLUMN LIST FOR BOTH FILES ===\n")

# Show columns side by side
print("All columns (in order):")
for i, col in enumerate(bpp_columns, 1):
    print(f"{i:3d}. {col}")

# Check order differences if columns are same but order differs
if bpp_set == res_com_set and bpp_columns != res_com_columns:
    print("\n=== ORDER DIFFERENCES ===\n")
    for i, (bpp_col, res_col) in enumerate(zip(bpp_columns, res_com_columns), 1):
        if bpp_col != res_col:
            print(f"Position {i}: BPP has '{bpp_col}', RES_COM has '{res_col}'")