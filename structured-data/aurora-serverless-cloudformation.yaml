AWSTemplateFormatVersion: '2010-09-09'
Description: 'Aurora Serverless PostgreSQL database for Map Appraiser development/testing'

Parameters:
  DatabaseName:
    Type: String
    Default: map_appraiser
    Description: Name of the database to create
    
  MasterUsername:
    Type: String
    Default: postgres
    Description: Master username for the database
    
  MasterUserPassword:
    Type: String
    NoEcho: true
    Description: Master password for the database (8-128 characters)
    MinLength: 8
    MaxLength: 128
    ConstraintDescription: Must be between 8-128 characters
    
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VPC ID where the database will be deployed
    
  SubnetIds:
    Type: List<AWS::EC2::Subnet::Id>
    Description: List of subnet IDs for the database subnet group (minimum 2 in different AZs)

Resources:
  # DB Subnet Group
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupName: !Sub '${AWS::StackName}-subnet-group'
      DBSubnetGroupDescription: Subnet group for Aurora Serverless cluster
      SubnetIds: !Ref SubnetIds
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-subnet-group'
        - Key: Environment
          Value: development

  # Security Group for Aurora
  DatabaseSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${AWS::StackName}-aurora-sg'
      GroupDescription: Security group for Aurora Serverless PostgreSQL
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 10.0.0.0/8
          Description: PostgreSQL access from private networks
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 172.16.0.0/12
          Description: PostgreSQL access from private networks
        - IpProtocol: tcp
          FromPort: 5432
          ToPort: 5432
          CidrIp: 192.168.0.0/16
          Description: PostgreSQL access from private networks
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-aurora-sg'
        - Key: Environment
          Value: development

  # Aurora Serverless v2 Cluster
  AuroraCluster:
    Type: AWS::RDS::DBCluster
    Properties:
      DBClusterIdentifier: !Sub '${AWS::StackName}-cluster'
      Engine: aurora-postgresql
      EngineMode: provisioned
      EngineVersion: '15.4'
      Port: 5432
      DatabaseName: !Ref DatabaseName
      MasterUsername: !Ref MasterUsername
      MasterUserPassword: !Ref MasterUserPassword
      DBSubnetGroupName: !Ref DBSubnetGroup
      VpcSecurityGroupIds:
        - !Ref DatabaseSecurityGroup
      ServerlessV2ScalingConfiguration:
        MinCapacity: 0.5
        MaxCapacity: 4
      BackupRetentionPeriod: 7
      PreferredBackupWindow: '03:00-04:00'
      PreferredMaintenanceWindow: 'sun:04:00-sun:05:00'
      DeletionProtection: false
      StorageEncrypted: true
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-cluster'
        - Key: Environment
          Value: development

  # Aurora Serverless v2 DB Instance
  AuroraInstance:
    Type: AWS::RDS::DBInstance
    Properties:
      DBInstanceIdentifier: !Sub '${AWS::StackName}-instance'
      DBClusterIdentifier: !Ref AuroraCluster
      DBInstanceClass: db.serverless
      Engine: aurora-postgresql
      PubliclyAccessible: false
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-instance'
        - Key: Environment
          Value: development

  # Secrets Manager for database credentials
  DatabaseSecret:
    Type: AWS::SecretsManager::Secret
    Properties:
      Name: !Sub '${AWS::StackName}/database-credentials'
      Description: Database credentials for Aurora Serverless PostgreSQL
      SecretString: !Sub |
        {
          "username": "${MasterUsername}",
          "password": "${MasterUserPassword}",
          "engine": "postgres",
          "host": "${AuroraCluster.Endpoint.Address}",
          "port": 5432,
          "dbname": "${DatabaseName}",
          "dbClusterIdentifier": "${AuroraCluster}"
        }
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-credentials'
        - Key: Environment
          Value: development

Outputs:
  ClusterIdentifier:
    Description: Aurora cluster identifier
    Value: !Ref AuroraCluster
    Export:
      Name: !Sub '${AWS::StackName}-ClusterIdentifier'
      
  ClusterEndpoint:
    Description: Aurora cluster endpoint
    Value: !GetAtt AuroraCluster.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-ClusterEndpoint'
      
  ClusterPort:
    Description: Aurora cluster port
    Value: !GetAtt AuroraCluster.Endpoint.Port
    Export:
      Name: !Sub '${AWS::StackName}-ClusterPort'
      
  DatabaseName:
    Description: Database name
    Value: !Ref DatabaseName
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseName'
      
  DatabaseSecretArn:
    Description: ARN of the database credentials secret
    Value: !Ref DatabaseSecret
    Export:
      Name: !Sub '${AWS::StackName}-DatabaseSecretArn'
      
  SecurityGroupId:
    Description: Security group ID for database access
    Value: !Ref DatabaseSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-SecurityGroupId'
      
  ConnectionCommand:
    Description: Sample psql connection command
    Value: !Sub |
      psql -h ${AuroraCluster.Endpoint.Address} -p 5432 -U ${MasterUsername} -d ${DatabaseName}